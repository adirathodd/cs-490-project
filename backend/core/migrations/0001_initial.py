# Generated by Django 5.2.7 on 2025-10-21 01:41

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InterviewQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('behavioral', 'Behavioral'), ('technical', 'Technical'), ('system_design', 'System Design'), ('case_study', 'Case Study'), ('cultural_fit', 'Cultural Fit')], max_length=20)),
                ('question_text', models.TextField()),
                ('context', models.TextField(blank=True)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('difficulty', models.CharField(default='medium', max_length=20)),
                ('suggested_answer_framework', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True)),
                ('category', models.CharField(blank=True, max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headline', models.CharField(blank=True, max_length=160)),
                ('location', models.CharField(blank=True, max_length=160)),
                ('summary', models.TextField(blank=True)),
                ('years_experience', models.PositiveSmallIntegerField(default=0)),
                ('preferred_roles', models.JSONField(blank=True, default=list)),
                ('portfolio_url', models.URLField(blank=True)),
                ('visibility', models.CharField(default='private', max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AutomationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_name', models.CharField(max_length=200)),
                ('trigger_event', models.CharField(max_length=50)),
                ('trigger_conditions', models.JSONField(default=dict)),
                ('action_type', models.CharField(max_length=50)),
                ('action_config', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('times_triggered', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='automation_rules', to='core.candidateprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('award', 'Award'), ('publication', 'Publication'), ('patent', 'Patent'), ('speaking', 'Speaking Engagement'), ('project', 'Notable Project'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True)),
                ('date', models.DateField()),
                ('url', models.URLField(blank=True)),
                ('issuer', models.CharField(blank=True, max_length=200)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='core.candidateprofile')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('issuing_organization', models.CharField(max_length=200)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('credential_id', models.CharField(blank=True, max_length=100)),
                ('credential_url', models.URLField(blank=True)),
                ('never_expires', models.BooleanField(default=False)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to='core.candidateprofile')),
            ],
            options={
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=180)),
                ('domain', models.CharField(max_length=180, unique=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('industry', models.CharField(blank=True, max_length=120)),
                ('size', models.CharField(blank=True, max_length=50)),
                ('hq_location', models.CharField(blank=True, max_length=160)),
                ('enrichment', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'indexes': [models.Index(fields=['domain'], name='idx_company_domain_lower')],
            },
        ),
        migrations.CreateModel(
            name='CompanyResearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True)),
                ('mission_statement', models.TextField(blank=True)),
                ('culture_keywords', models.JSONField(blank=True, default=list)),
                ('recent_news', models.JSONField(blank=True, default=list)),
                ('funding_info', models.JSONField(blank=True, default=dict)),
                ('tech_stack', models.JSONField(blank=True, default=list)),
                ('employee_count', models.IntegerField(blank=True, null=True)),
                ('growth_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('glassdoor_rating', models.DecimalField(blank=True, decimal_places=1, max_digits=2, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='research', to='core.company')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=30)),
                ('linkedin_url', models.URLField(blank=True)),
                ('job_title', models.CharField(blank=True, max_length=200)),
                ('relationship_type', models.CharField(choices=[('colleague', 'Colleague'), ('manager', 'Manager'), ('mentor', 'Mentor'), ('recruiter', 'Recruiter'), ('employee', 'Employee at Target Company'), ('other', 'Other')], max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('last_contacted', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='core.candidateprofile')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contacts', to='core.company')),
            ],
            options={
                'ordering': ['-last_contacted', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_type', models.CharField(choices=[('resume', 'Resume'), ('cover_letter', 'Cover Letter'), ('portfolio', 'Portfolio'), ('cert', 'Certification')], max_length=20)),
                ('version', models.PositiveIntegerField(default=1)),
                ('storage_url', models.URLField()),
                ('file_hash', models.CharField(blank=True, max_length=128)),
                ('generated_by_ai', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='core.candidateprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('interested', 'Interested'), ('applied', 'Applied'), ('phone', 'Phone Screen'), ('onsite', 'Onsite/Panel'), ('offer', 'Offer'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='interested', max_length=20)),
                ('applied_via', models.CharField(blank=True, max_length=40)),
                ('salary_expectation', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='core.candidateprofile')),
                ('cover_letter_doc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cover_for', to='core.document')),
                ('resume_doc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resume_for', to='core.document')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(max_length=200)),
                ('degree_type', models.CharField(choices=[('hs', 'High School'), ('aa', 'Associate'), ('ba', 'Bachelor'), ('ma', 'Master'), ('phd', 'PhD'), ('cert', 'Certificate'), ('boot', 'Bootcamp')], max_length=10)),
                ('field_of_study', models.CharField(blank=True, max_length=200)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('gpa', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('honors', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(blank=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education', to='core.candidateprofile')),
            ],
            options={
                'ordering': ['-end_date'],
            },
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=24)),
                ('scheduled_start', models.DateTimeField()),
                ('scheduled_end', models.DateTimeField()),
                ('location_or_link', models.CharField(blank=True, max_length=255)),
                ('interviewer_contact', models.JSONField(blank=True, default=dict)),
                ('result', models.CharField(blank=True, max_length=16)),
                ('feedback', models.TextField(blank=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='core.application')),
            ],
        ),
        migrations.CreateModel(
            name='InterviewPrepSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('duration_minutes', models.IntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('confidence_level', models.IntegerField(default=3)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prep_sessions', to='core.application')),
                ('interview', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prep_sessions', to='core.interview')),
                ('questions_practiced', models.ManyToManyField(blank=True, related_name='practice_sessions', to='core.interviewquestion')),
            ],
            options={
                'ordering': ['-session_date'],
            },
        ),
        migrations.CreateModel(
            name='JobOpportunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=220)),
                ('location', models.CharField(blank=True, max_length=160)),
                ('employment_type', models.CharField(choices=[('ft', 'Full-time'), ('pt', 'Part-time'), ('contract', 'Contract'), ('intern', 'Internship')], default='ft', max_length=20)),
                ('seniority', models.CharField(blank=True, max_length=60)),
                ('source', models.CharField(default='manual', max_length=60)),
                ('external_url', models.URLField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('raw_posting', models.JSONField(blank=True, default=dict)),
                ('active', models.BooleanField(default=True)),
                ('posted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='core.company')),
            ],
        ),
        migrations.AddField(
            model_name='document',
            name='source_job',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.jobopportunity'),
        ),
        migrations.AddField(
            model_name='application',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='core.jobopportunity'),
        ),
        migrations.CreateModel(
            name='AIGenerationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('resume', 'Resume'), ('cover_letter', 'Cover Letter'), ('email', 'Email Template'), ('linkedin_message', 'LinkedIn Message'), ('company_research', 'Company Research'), ('interview_answer', 'Interview Answer')], max_length=30)),
                ('prompt_used', models.TextField()),
                ('generated_content', models.TextField()),
                ('model_version', models.CharField(max_length=50)),
                ('tokens_used', models.IntegerField(default=0)),
                ('generation_time_ms', models.IntegerField(default=0)),
                ('user_edited', models.BooleanField(default=False)),
                ('user_rating', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_generations', to='core.candidateprofile')),
                ('associated_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.jobopportunity')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('is_required', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=0)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='core.jobopportunity')),
            ],
            options={
                'ordering': ['-is_required', '-priority'],
            },
        ),
        migrations.CreateModel(
            name='MarketIntelligence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=220)),
                ('location', models.CharField(max_length=160)),
                ('experience_level', models.CharField(max_length=50)),
                ('industry', models.CharField(blank=True, max_length=120)),
                ('median_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('percentile_25', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('percentile_75', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('sample_size', models.IntegerField(default=0)),
                ('demand_score', models.IntegerField(default=50)),
                ('growth_trend', models.CharField(default='stable', max_length=20)),
                ('top_skills', models.JSONField(blank=True, default=list)),
                ('data_source', models.CharField(blank=True, max_length=100)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'indexes': [models.Index(fields=['job_title', 'location'], name='core_market_job_tit_af60e4_idx'), models.Index(fields=['industry'], name='core_market_industr_f60089_idx')],
            },
        ),
        migrations.CreateModel(
            name='MockInterview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recording_url', models.URLField(blank=True)),
                ('transcript', models.TextField(blank=True)),
                ('ai_feedback', models.JSONField(blank=True, default=dict)),
                ('mentor_feedback', models.TextField(blank=True)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('areas_for_improvement', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('prep_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mock_interviews', to='core.interviewprepsession')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(max_length=50)),
                ('link_url', models.CharField(blank=True, max_length=500)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_date', models.DateField()),
                ('total_applications', models.IntegerField(default=0)),
                ('applications_this_week', models.IntegerField(default=0)),
                ('phone_screens', models.IntegerField(default=0)),
                ('onsite_interviews', models.IntegerField(default=0)),
                ('offers_received', models.IntegerField(default=0)),
                ('rejections', models.IntegerField(default=0)),
                ('avg_response_time_days', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('conversion_rate_to_phone', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('conversion_rate_to_offer', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('active_pipelines', models.IntegerField(default=0)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='core.candidateprofile')),
            ],
            options={
                'ordering': ['-metric_date'],
            },
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('potential', 'Potential'), ('requested', 'Requested'), ('received', 'Received'), ('used', 'Used'), ('declined', 'Declined')], default='potential', max_length=20)),
                ('requested_date', models.DateField(blank=True, null=True)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals', to='core.application')),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals_given', to='core.contact')),
            ],
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('follow_up', 'Follow Up'), ('interview_prep', 'Interview Preparation'), ('deadline', 'Application Deadline'), ('networking', 'Network Contact'), ('document_update', 'Update Document')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('due_date', models.DateTimeField()),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('priority', models.IntegerField(default=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='core.application')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='core.candidateprofile')),
            ],
            options={
                'ordering': ['is_completed', 'due_date'],
            },
        ),
        migrations.CreateModel(
            name='SalaryData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('salary_period', models.CharField(default='yearly', max_length=20)),
                ('equity_offered', models.BooleanField(default=False)),
                ('benefits_summary', models.TextField(blank=True)),
                ('source', models.CharField(default='manual', max_length=50)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='salary_info', to='core.jobopportunity')),
            ],
        ),
        migrations.CreateModel(
            name='SharedNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('is_private', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_notes', to='core.application')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes_written', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='interviewquestion',
            name='related_skills',
            field=models.ManyToManyField(blank=True, related_name='interview_questions', to='core.skill'),
        ),
        migrations.CreateModel(
            name='CandidateSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(default='intermediate', max_length=20)),
                ('years', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='core.candidateprofile')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidates', to='core.skill')),
            ],
        ),
        migrations.CreateModel(
            name='SuccessPattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pattern_type', models.CharField(max_length=50)),
                ('pattern_value', models.CharField(max_length=200)),
                ('success_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('sample_size', models.IntegerField(default=0)),
                ('confidence_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('insights', models.TextField(blank=True)),
                ('identified_at', models.DateTimeField(auto_now_add=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='success_patterns', to='core.candidateprofile')),
            ],
            options={
                'ordering': ['-success_rate', '-confidence_score'],
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('coach', 'Career Coach'), ('mentor', 'Mentor'), ('partner', 'Accountability Partner'), ('viewer', 'Viewer')], max_length=20)),
                ('permission_level', models.CharField(choices=[('view', 'View Only'), ('comment', 'View & Comment'), ('edit', 'Edit'), ('admin', 'Admin')], default='view', max_length=20)),
                ('invited_at', models.DateTimeField(auto_now_add=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to='core.candidateprofile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collaborating_on', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('login', 'Login'), ('profile_update', 'Profile Update'), ('application_created', 'Application Created'), ('application_updated', 'Application Status Update'), ('document_generated', 'Document Generated'), ('interview_scheduled', 'Interview Scheduled'), ('company_research', 'Company Research')], max_length=30)),
                ('resource_type', models.CharField(blank=True, max_length=50)),
                ('resource_id', models.IntegerField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=180)),
                ('job_title', models.CharField(max_length=220)),
                ('location', models.CharField(blank=True, max_length=160)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('achievements', models.JSONField(blank=True, default=list)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_experiences', to='core.candidateprofile')),
                ('skills_used', models.ManyToManyField(blank=True, related_name='used_in_experiences', to='core.skill')),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(max_length=24)),
                ('at', models.DateTimeField(default=django.utils.timezone.now)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='core.application')),
            ],
            options={
                'indexes': [models.Index(fields=['application', '-at'], name='core_applic_applica_2d3256_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='candidateprofile',
            index=models.Index(fields=['user'], name='core_candid_user_id_d5fe80_idx'),
        ),
        migrations.AddIndex(
            model_name='automationrule',
            index=models.Index(fields=['candidate', 'is_active'], name='core_automa_candida_c65d9e_idx'),
        ),
        migrations.AddIndex(
            model_name='achievement',
            index=models.Index(fields=['candidate', 'type', '-date'], name='core_achiev_candida_d8fb59_idx'),
        ),
        migrations.AddIndex(
            model_name='certification',
            index=models.Index(fields=['candidate', '-issue_date'], name='core_certif_candida_bcbd98_idx'),
        ),
        migrations.AddIndex(
            model_name='companyresearch',
            index=models.Index(fields=['company'], name='core_compan_company_1fef13_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['candidate', '-last_contacted'], name='core_contac_candida_f1d955_idx'),
        ),
        migrations.AddIndex(
            model_name='contact',
            index=models.Index(fields=['company'], name='core_contac_company_8e065f_idx'),
        ),
        migrations.AddIndex(
            model_name='education',
            index=models.Index(fields=['candidate', '-end_date'], name='core_educat_candida_0fa96f_idx'),
        ),
        migrations.AddIndex(
            model_name='interview',
            index=models.Index(fields=['application', '-scheduled_start'], name='core_interv_applica_1633bd_idx'),
        ),
        migrations.AddIndex(
            model_name='interviewprepsession',
            index=models.Index(fields=['application', '-session_date'], name='core_interv_applica_9fbb33_idx'),
        ),
        migrations.AddIndex(
            model_name='jobopportunity',
            index=models.Index(fields=['company', '-posted_at'], name='core_jobopp_company_37a625_idx'),
        ),
        migrations.AddIndex(
            model_name='jobopportunity',
            index=models.Index(fields=['active'], name='core_jobopp_active_731542_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['candidate', 'doc_type', '-created_at'], name='core_docume_candida_a64f63_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='document',
            unique_together={('candidate', 'doc_type', 'version')},
        ),
        migrations.AddIndex(
            model_name='application',
            index=models.Index(fields=['candidate', 'status', '-updated_at'], name='core_applic_candida_3c4170_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='application',
            unique_together={('candidate', 'job')},
        ),
        migrations.AddIndex(
            model_name='aigenerationlog',
            index=models.Index(fields=['candidate', 'content_type', '-created_at'], name='core_aigene_candida_250b78_idx'),
        ),
        migrations.AddIndex(
            model_name='aigenerationlog',
            index=models.Index(fields=['associated_job'], name='core_aigene_associa_93c33e_idx'),
        ),
        migrations.AddIndex(
            model_name='jobrequirement',
            index=models.Index(fields=['job', 'category'], name='core_jobreq_job_id_088e1f_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'is_read', '-created_at'], name='core_notifi_user_id_f286cd_idx'),
        ),
        migrations.AddIndex(
            model_name='performancemetric',
            index=models.Index(fields=['candidate', '-metric_date'], name='core_perfor_candida_42db25_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='performancemetric',
            unique_together={('candidate', 'metric_date')},
        ),
        migrations.AddIndex(
            model_name='referral',
            index=models.Index(fields=['application', 'status'], name='core_referr_applica_df3865_idx'),
        ),
        migrations.AddIndex(
            model_name='referral',
            index=models.Index(fields=['contact'], name='core_referr_contact_57de15_idx'),
        ),
        migrations.AddIndex(
            model_name='reminder',
            index=models.Index(fields=['candidate', 'is_completed', 'due_date'], name='core_remind_candida_82df9a_idx'),
        ),
        migrations.AddIndex(
            model_name='reminder',
            index=models.Index(fields=['application'], name='core_remind_applica_2081e3_idx'),
        ),
        migrations.AddIndex(
            model_name='salarydata',
            index=models.Index(fields=['job'], name='core_salary_job_id_2a0a45_idx'),
        ),
        migrations.AddIndex(
            model_name='sharednote',
            index=models.Index(fields=['application', '-created_at'], name='core_shared_applica_14df8d_idx'),
        ),
        migrations.AddIndex(
            model_name='interviewquestion',
            index=models.Index(fields=['type', 'category'], name='core_interv_type_60a7f2_idx'),
        ),
        migrations.AddIndex(
            model_name='candidateskill',
            index=models.Index(fields=['candidate'], name='core_candid_candida_3c99f4_idx'),
        ),
        migrations.AddIndex(
            model_name='candidateskill',
            index=models.Index(fields=['skill'], name='core_candid_skill_i_48d21d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='candidateskill',
            unique_together={('candidate', 'skill')},
        ),
        migrations.AddIndex(
            model_name='successpattern',
            index=models.Index(fields=['candidate', 'pattern_type'], name='core_succes_candida_43e3f3_idx'),
        ),
        migrations.AddIndex(
            model_name='teammember',
            index=models.Index(fields=['candidate', 'is_active'], name='core_teamme_candida_a91087_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='teammember',
            unique_together={('candidate', 'user')},
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['user', '-timestamp'], name='core_userac_user_id_efaa8e_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivity',
            index=models.Index(fields=['action_type', '-timestamp'], name='core_userac_action__cc318d_idx'),
        ),
        migrations.AddIndex(
            model_name='workexperience',
            index=models.Index(fields=['candidate', '-start_date'], name='core_workex_candida_d7b808_idx'),
        ),
    ]
