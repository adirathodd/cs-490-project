# Generated by Copilot on 2025-10-27
from django.conf import settings
from django.db import migrations


def backfill_useraccounts(apps, schema_editor):
    User = apps.get_model(settings.AUTH_USER_MODEL.split('.')[0], settings.AUTH_USER_MODEL.split('.')[1])
    UserAccount = apps.get_model('core', 'UserAccount')

    existing_emails = set(UserAccount.objects.values_list('email', flat=True))

    # Iterate deterministically
    for user in User.objects.order_by('id').all():
        email = (getattr(user, 'email', '') or '').lower()
        if not email:
            continue
        if email in existing_emails:
            continue
        # Create if missing
        try:
            UserAccount.objects.create(user_id=user.id, email=email)
            existing_emails.add(email)
        except Exception:
            # Skip on any integrity errors; admin can resolve duplicates later
            continue


def noop_reverse(apps, schema_editor):
    # Do nothing on reverse migration to avoid deleting data
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0012_useraccount'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RunPython(backfill_useraccounts, noop_reverse),
    ]
